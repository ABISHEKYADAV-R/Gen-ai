rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Allow authenticated users to read and write their own product images
    match /products/{userId}/{allPaths=**} {
      allow read: if true; // Anyone can read product images
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.size < 10 * 1024 * 1024  // Max 10MB
        && request.resource.contentType.matches('image/.*'); // Only images
      allow delete: if request.auth != null 
        && request.auth.uid == userId; // Allow users to delete their own images
    }
    
    // Allow authenticated users to read and write their own profile images
    match /profiles/{userId}/{allPaths=**} {
      allow read: if true; // Anyone can read profile images
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.size < 5 * 1024 * 1024   // Max 5MB
        && request.resource.contentType.matches('image/.*'); // Only images
      allow delete: if request.auth != null 
        && request.auth.uid == userId; // Allow users to delete their own images
    }
    
    // Public images folder - read-only for all
    match /public/{allPaths=**} {
      allow read: if true;
    }
    
    // Temporary uploads folder - authenticated users can upload temporarily
    match /temp/{userId}/{allPaths=**} {
      allow read, write, delete: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.size < 10 * 1024 * 1024  // Max 10MB
        && request.resource.contentType.matches('image/.*'); // Only images
    }

    // Compressed images folder - for our image optimization
    match /compressed/{userId}/{allPaths=**} {
      allow read: if true; // Anyone can read compressed images
      allow write, delete: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.size < 5 * 1024 * 1024   // Max 5MB for compressed
        && request.resource.contentType.matches('image/.*'); // Only images
    }
    
    // Allow deletion of any file in user's folder (for cleanup)
    match /{path=**} {
      allow delete: if request.auth != null 
        && path.matches('.*/.*') 
        && path.split('/')[1] == request.auth.uid;
    }
  }
}